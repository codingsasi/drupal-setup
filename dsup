#!/bin/bash

# Copyright 2015 Abhai Sasidharan <abhai.sasidharan@zyxware.com>
# Copyright 2015 Anish A <anish.a@zyxware.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

usage() {
  echo -e "\nUsage: dsup [-u <string>] [-p <string>] [-n <drupal version for new installation>] [Path/to/database/dump] [database name] [Virtual Host Name] [Link to repo] \nExample: dsup -u dbusername -p dbpassword -v 7 /home/abhai/drupal7.tar.gz dbname drupal7.local git@github.com:someone/drupal7.git" 1>&2;
  exit 1; }
#Options: -u { mysql username } -p { mysql password }
while getopts ":u:p:n:" o; do
  case "${o}" in
    u)
      u=${OPTARG}
      ;;
    p)
      p=${OPTARG}
      ;;
    n)
      n=${OPTARG}
      ;;
    *)
      usage
      ;;
  esac
done
#Options have been considered now shift that to the remaining arguments
shift "$((OPTIND-1))"
echo "LOCAL"
echo ${u}
echo ${p}
echo ${n}
#Check for all the arguments
if [ -z "${n}" ] && [ [ -z "${u}" ] || [ -z "${p}" ] || [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ] || [ -z "$4" ] ]; then
  usage
elif [ ! -z "${n}" ] && [ [ -z "${u}" ] || [ -z "${p}" ] || [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ] || [ -z "$4" ] ]; then
  echo "Problem?"
else
  # If database doesn't exist
  if [ ! -d /var/lib/mysql/"$2" ]; then
    mysql -u "${u}" -p"${p}" -e "create database $2"
    echo -e "\nExtracting and importing database. This may take a while..."
    gunzip < "$1" | mysql -u "$u" -p"$p" "$2"
  else
    TABLES=$(mysql -u "${u}" -p"${p}" $2 -e 'show tables')
    # If empty database exists
    if [ "$TABLES" == "" ]; then
      echo -e "\nExtracting and importing database. This may take a while..."
      gunzip < "$1" | mysql -u "$u" -p"$p" "$2"
    #If database with same name exists
    else
      mysql -u "${u}" -p"${p}" -e "drop database $2"
      mysql -u "${u}" -p"${p}" -e "create database $2"
      echo -e "\nExtracting and importing database. This may take a while..."
      gunzip < "$1" | mysql -u "$u" -p"$p" "$2"
    fi
  fi

  echo -e "\nCloning git repository..."
  sudo -u $SUDO_USER git clone "$4" web
  echo -e "\nDone. Writing settings file..."

  #If settings.php exists
  if [ -f $PWD/web/sites/default/settings.php ]; then
    #Use default.settings.php to add database connection details
    cp $PWD/web/sites/default/settings.php $PWD/web/sites/default/settings.php.old
    cp $PWD/web/sites/default/default.settings.php $PWD/web/sites/default/settings.php
    old="databases = array();"
    new="databases = array ('default' => array ('default' => array ('database' => '$2', 'username' => '${u}', 'password' => '${p}','host' => 'localhost', 'port' => '', 'driver' => 'mysql', 'prefix' => '', ), ), );"
    sed "s/$old/$new/g" $PWD/web/sites/default/settings.php > $PWD/web/sites/default/settings.php.temp
    rm $PWD/web/sites/default/settings.php
    mv $PWD/web/sites/default/settings.php.temp $PWD/web/sites/default/settings.php
  else
    #Use default.settings.php to add database connection details
    cp $PWD/web/sites/default/default.settings.php $PWD/web/sites/default/settings.php
    old="databases = array();"
    new="databases = array ('default' => array ('default' => array ('database' => '$2', 'username' => '${u}', 'password' => '${p}','host' => 'localhost', 'port' => '', 'driver' => 'mysql', 'prefix' => '', ), ), );"
    sed "s/$old/$new/g" $PWD/web/sites/default/settings.php > $PWD/web/sites/default/settings.php.temp
    rm $PWD/web/sites/default/settings.php
    mv $PWD/web/sites/default/settings.php.temp $PWD/web/sites/default/settings.php
  fi

  echo "Creating virtual host..."
  echo -e "<VirtualHost *:80>
      ServerAdmin webmaster@localhost
      ServerName $3
      DocumentRoot $PWD/web
      <Directory $PWD/web>
    AllowOverride All
    Order allow,deny
    allow from all
    Require all granted
      </Directory>
  </VirtualHost>" > /etc/apache2/sites-available/"$3".conf

  echo -e "127.0.0.1  $3\n$(cat /etc/hosts)" > /etc/hosts
  a2ensite $3
  service apache2 restart

  echo "Drupal Virtual host setup complete!"
fi
